<!--  -->
<launch>

  <!-- ========= Bagplayer ========== -->
  <arg name="bagname" default="/home/razlaw/bags/obstacle_detection_dji/new_objects_proto/velodyne_2017-01-17-15-46-21.bag"/>
  <arg name="rate" default="0.1"/>
  <arg name="start" default="0"/>

  <node pkg="rosbag" type="play" name="play" args="--clock -r $(arg rate) -s $(arg start) $(arg bagname)" output="screen" respawn="false" >
    <remap from="/velodyne_points" to="/velodyne_points_frombag" />
  </node>


  <!-- ============= Rviz / rqt =============  -->
  <arg name="use_rqt" default="true"/>
  <node unless="$(arg use_rqt)" name="rivz" pkg="rviz" type="rviz" />
  <node if="$(arg use_rqt)" name="rqt_gui" pkg="rqt_gui" type="rqt_gui" output="screen" required="true" args=""/>


  <!-- ========= Config Server ========== -->
  <!-- will try to read an initial configuration file form CONFIGPATH/config_ROBOTNAME -->
  <node if="$(arg use_rqt)" name="config_server" pkg="config_server" type="config_server" output="screen" required="true">
    <param name="config_path" value="CONFIGPATH" />
    <param name="robot_name" value="ROBOTNAME" />
    <param name="robot_type" value="ROBOTTYPE" />
  </node> 

<!-- needed for older bagfiles + change frame_id below to local_odom
  <param name="robot_description" command="$(find xacro)/xacro.py $(find mbzirc_urdf)/urdf/m600/m600.urdf.xacro" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="100.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>
  
  <node pkg="mbzirc_msg_bridge" type="mbzirc_msg_bridge" name="mbzirc_msg_bridge" output="screen">
    <remap from="~odom_in" to="/dji_sdk/odometry" />
    <remap from="~global_position_in" to="/dji_sdk/global_position" />
    <remap from="~attitude_in" to="/dji_sdk/attitude_quaternion" />
    <param name="base_frame" value="base_link" />
  </node>
-->

  <!-- ============= Pointcloud Conversion (incl. nodelet_manager) =============  -->
  <!-- declare arguments with default values -->
  <arg name="pcap" default="" />
  <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  <arg name="min_range" default="0.01" />
  <arg name="max_range" default="130.0" />

  <node pkg="nodelet" type="nodelet" name="velodyne_nodelet_manager"
        args="manager" output="screen" />
  <arg name="read_once" default="false" />
  <arg name="read_fast" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="frame_id" default="odom" />

  <node pkg="nodelet" type="nodelet" name="transform_nodelet"
        args="load velodyne_pointcloud/TransformNodelet velodyne_nodelet_manager"  output="screen">
    <param name="calibration" value="$(arg calibration)"/>
    <param name="min_range" value="$(arg min_range)"/>
    <param name="max_range" value="$(arg max_range)"/>
    <param name="frame_id" value="$(arg frame_id)"/>
  </node>

  
  <!-- ============= Object Detection =============  -->
  <arg name="manager" default="velodyne_nodelet_manager" />
  <arg name="points_topic" default="/velodyne_points" />
  <arg name="certainty_threshold" default="0.0" />
  <arg name="median_small_kernel_size" default="9" />
  <arg name="median_big_kernel_size" default="41" />
  <arg name="distance_to_comparison_points" default="3" />
  <arg name="publish_filtered_cloud" default="false" />
  <arg name="publish_debug_cloud" default="false" />

  <include file="$(find velodyne_object_detector)/launch/object_detector_nodelet.launch">
    <arg name="manager" value="$(arg manager)" />
    <arg name="points_topic" value="$(arg points_topic)" />
    <arg name="certainty_threshold" value="$(arg certainty_threshold)" />
    <arg name="median_small_kernel_size" value="$(arg median_small_kernel_size)" />
    <arg name="median_big_kernel_size" value="$(arg median_big_kernel_size)" />
    <arg name="distance_to_comparison_points" value="$(arg distance_to_comparison_points)" />
    <arg name="publish_filtered_cloud" value="$(arg publish_filtered_cloud)" />
    <arg name="publish_debug_cloud" value="$(arg publish_filtered_cloud)" />
  </include>

</launch>
